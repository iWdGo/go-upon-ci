language: go

arch: arm64

os: linux

go: 1.14.x

env:
  - GO111MODULE=auto

install:
  - echo $TRAVIS_BUILD_DIR

before_script:
  - export GOROOT_BOOTSTRAP=$(go env GOROOT)
  - mkdir golang
  - cd golang
  - git clone --branch master --single-branch https://github.com/golang/go.git
  - cd go
  - export GOCLONE=$(pwd)
  - echo "toolstash install"
  - go get -u golang.org/x/tools/...
  - toolstash -v save
  - echo "commit patch(es)"
  - cd $TRAVIS_BUILD_DIR
  - mv make_travisci.bash $GOCLONE/src/make.bash
  - export COMMIT_TITLE=$(basename -s .patch *.patch)
  - mv *.patch $GOCLONE
  - cd $GOCLONE
  - git apply -v --ignore-space-change --ignore-whitespace --whitespace=fix *.patch
  - rm *.patch
  - echo "Generate compiler rules"
  - cd src/cmd/compile/internal/ssa/gen
  - go run *.go
  - cd $GOCLONE
  - git log -1 # on tip
  # git has no global config on Travis CI. No '/home/travis/.gitconfig'
  - git config -l # displays local configuration
  - git config user.email "constantinkonstantinidis@gmail.com"
  - git config user.name "Constantin Konstantinidis"
  - git add -A
  - git commit -m "$COMMIT_TITLE"

script:
  - cd $GOCLONE/src
  - sh ./make.bash

after_success:
  - rm -f ./cmd/dist/dist
  - cd $GOCLONE
  - export GOROOT= # get intermediate commit of go
  - ./bin/go tool dist version

after_script:
  - ./bin/go env
  - ./bin/go tool dist test
  - echo "toolstash uses release version"
  - go tool dist install -v cmd/compile # installing the compiler
  - go build -v -toolexec 'toolstash -cmp' -a std
  - echo "toolstash-check"
  - go get -u github.com/iwdgo/toolstash-check
  - toolstash-check -v -repo=$GOCLONE
  - echo "toolstash-check -all"
  - toolstash-check -all -repo=$GOCLONE
  - git status
