language: go

arch: arm64

os: linux

go: 1.14.x

env:
  - GO111MODULE=auto

install:
  - echo ""

before_script:
  - echo "Cloning"
  - mkdir golang
  - cd golang
  - git clone --branch master --single-branch https://github.com/golang/go.git
  - pwd
  - cd go
  - echo "Set up"
  - export GOROOT_BOOTSTRAP=$(go env GOROOT)
  - go env
  - echo "Toolstash"
  - go get -u golang.org/x/tools/...
  - toolstash -v save
  - echo "Apply patches"
  - cd ../..
  - pwd
  - mv make_travisci.bash ./golang/go/src/make.bash
  - export COMMITTITLE=$(basename -s .patch *.patch)
  - mv *.patch ./golang/go
  - cd golang/go
  - git apply -v --ignore-space-change --ignore-whitespace --whitespace=fix *.patch
  - rm *.patch
  - echo "Generate compiler rules"
  - cd src/cmd/compile/internal/ssa/gen
  - go run *.go
  - cd ../../../../../..
  - echo "Commit"
  - # git has no global config on Travis CI. No '/home/travis/.gitconfig'
  - git config -l # displays local configuration
  - git config user.email "constantinkonstantinidis@gmail.com"
  - git config user.name "Constantin Konstantinidis"
  - git add -A
  - git status
  - git commit -m $(COMMITTITLE)
  - echo "On tip"
  - git log -2

script:
  - pwd
  - cd src
  - sh ./make.bash

after_success:
  - rm -f ./cmd/dist/dist
  - cd ..
  - pwd
  - export GOROOT=
  - echo $GOROOT
  - ./bin/go tool dist version

after_script:
  - ./bin/go env
  - ./bin/go tool dist test
  - echo "toolstash using the native installation"
  - go tool dist install -v cmd/compile # installing the compiler
  - go build -v -toolexec 'toolstash -cmp' -a std
  - echo "toolstash-check"
  - go get -u github.com/iwdgo/toolstash-check
  - # toolstash-check -v -repo=$(pwd)
  - echo "toolstash-check -all"
  - # toolstash-check -all -repo=$(pwd)
