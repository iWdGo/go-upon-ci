language: go

arch: arm64

os: linux

go: 1.14.x

env:
  - GO111MODULE=auto

install:
  - echo ""

before_script:
  - echo "Cloning"
  - mkdir golang
  - cd golang
  - git version
  - git clone --branch master --single-branch https://github.com/golang/go.git
  - pwd
  - cd go
  - echo "Set up"
  - export GOROOT_BOOTSTRAP=$(go env GOROOT)
  - go env
  - echo "Toolstash"
  - go get -u golang.org/x/tools/...
  - toolstash -v save
  - echo "Apply patches"
  - cd ../..
  - pwd
  - mv make_travisci.bash ./golang/go/src/make.bash
  - mv *.patch ./golang/go
  - cd golang/go
  - git apply -v --ignore-space-change --ignore-whitespace --whitespace=fix *.patch
  - echo "Gen compiler rules"
  - cd src/cmd/compile/internal/ssa/gen
  - go run *.go
  - cd ../../../../../..
  - echo "Commit"
  - git config user.email "constantinkonstantinidis@gmail.com"
  - git config user.name "Constantin Konstantinidis"
  - git add src/cmd/compile/internal/ssa/gen/ARM.rules
  - git add src/cmd/compile/internal/ssa/rewriteARM.go
  - git add src/make.bash
  - git status
  - git commit -m 'strongly typed ARM rules'
  - echo "On tip"
  - git log -2

script:
  - pwd
  - cd src
  - sh ./make.bash

after_script:
  - rm -f ./cmd/dist/dist
  - cd ..
  - pwd
  - ./bin/go env
  # skipping tests
  #  ./bin/go tool dist test
  - echo "toolstash"
  - ./bin/go tool dist install cmd/compile
  - ./bin/go build -toolexec 'toolstash -cmp' -a std
  - echo "toolstash-check"
  - go get -u github.com/mdempsky/toolstash-check
  - toolstash-check || true

after_success:
  - export GOROOT=
  - echo $GOROOT
  - ./bin/go tool dist version
