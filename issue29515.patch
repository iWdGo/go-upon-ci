From 9d47a437dc6ffca86746e0db41315b4240814d67 Mon Sep 17 00:00:00 2001
From: Constantin Konstantinidis <constantinkonstantinidis@gmail.com>
Date: Thu, 9 Apr 2020 22:04:23 +0200
Subject: [PATCH] cmd/go: remove output of proxy_test log in tests

Fixes #29515
Fixes #30604

Change-Id: Ie75a331cd6ca51806c5720443506d4fe0bec28cf
---
 .travis.yml              | 57 ++++++++++++++++++++++++++++++++++++++++
 src/cmd/go/proxy_test.go |  7 +++--
 src/make.bash            |  2 +-
 3 files changed, 61 insertions(+), 5 deletions(-)
 create mode 100644 .travis.yml

diff --git a/.travis.yml b/.travis.yml
new file mode 100644
index 0000000000..9179ed74f2
--- /dev/null
+++ b/.travis.yml
@@ -0,0 +1,57 @@
+language: go
+
+arch: arm64
+
+os:
+  - windows
+  - linux
+
+go: 1.11.x
+
+env:
+  - GO111MODULE=off
+
+before_script:
+  - echo "On tip"
+  - git log -2 --pretty=short
+  - ls
+  - echo "Cloning"
+  - git clone https://github.com/golang/go.git master
+  - pwd
+  - ls
+  - echo "Set up"
+  - export GOROOT_BOOTSTRAP=$(go env GOROOT)
+  - systeminfo || true
+  - lsb_release -a  || true
+  - cat etc/debian_release || true
+  - go env
+
+install: skip
+
+script:
+  - pwd
+  - cd src
+  - sh ./make.bash
+
+after_success:
+  - del /F ./cmd/dist/dist || true
+  - rm -f ./cmd/dist/dist || true
+  - export GOROOT=
+  - echo $GOROOT
+  - cd ..
+  - pwd
+  - ./bin/go tool dist version
+  - ./bin/go tool dist test
+  - echo "***** Proxy *****"
+  - ./bin/go env -w GOPROXY=localhost:6123/mod
+  - ./bin/go env GOPROXY
+  - ping localhost
+  - Test-NetConnection localhost -port 6123 || true
+  - nmap -p 6123 locahost || true
+  - echo "***** Feature tests *****"
+  - ./bin/go test -run=TestScript/mod_query_exclude cmd/go
+  - ./bin/go test -run=TestScript/mod_query_exclude -v cmd/go
+  - ./bin/go test -run=TestScript/mod_query_exclude -timeout=0 -proxy=localhost:6123/mod cmd/go
+  - ./bin/go test -run=TestScript/mod_query_exclude -v -timeout=0 -proxy=localhost:6123/mod cmd/go
+  - ./bin/go test -run=TestScript/mod_download -v cmd/go
+  - ./bin/go test -run=TestScript/gcflags_patterns -count=1 -short -v cmd/go
diff --git a/src/cmd/go/proxy_test.go b/src/cmd/go/proxy_test.go
index 8214488a59..841fd2dfd7 100644
--- a/src/cmd/go/proxy_test.go
+++ b/src/cmd/go/proxy_test.go
@@ -50,7 +50,9 @@ func StartProxy() {
 	proxyOnce.Do(func() {
 		readModList()
 		addr := *proxyAddr
+		quiet := ""
 		if addr == "" {
+			quiet = "/quiet"
 			addr = "localhost:0"
 		}
 		l, err := net.Listen("tcp", addr)
@@ -58,7 +60,7 @@ func StartProxy() {
 			log.Fatal(err)
 		}
 		*proxyAddr = l.Addr().String()
-		proxyURL = "http://" + *proxyAddr + "/mod"
+		proxyURL = "http://" + *proxyAddr + "/mod" + quiet
 		fmt.Fprintf(os.Stderr, "go test proxy running at GOPROXY=%s\n", proxyURL)
 		go func() {
 			log.Fatalf("go proxy: http.Serve: %v", http.Serve(l, http.HandlerFunc(proxyHandler)))
@@ -91,9 +93,6 @@ func readModList() {
 		encPath := strings.ReplaceAll(name[:i], "_", "/")
 		path, err := module.UnescapePath(encPath)
 		if err != nil {
-			if encPath != "example.com/invalidpath/v1" {
-				fmt.Fprintf(os.Stderr, "go proxy_test: %v\n", err)
-			}
 			continue
 		}
 		encVers := name[i+1:]
diff --git a/src/make.bash b/src/make.bash
index 880a0f43d5..62bd8084f2 100755
--- a/src/make.bash
+++ b/src/make.bash
@@ -210,7 +210,7 @@ fi
 # Bootstrap installs a proper cmd/dist, built with the new toolchain.
 # Throw ours, built with Go 1.4, away after bootstrap.
 ./cmd/dist/dist bootstrap $buildall $vflag $GO_DISTFLAGS "$@"
-rm -f ./cmd/dist/dist
+# rm -f ./cmd/dist/dist
 
 # DO NOT ADD ANY NEW CODE HERE.
 # The bootstrap+rm above are the final step of make.bash.
-- 
2.22.0.windows.1

