name: go-compiler
on: [push]
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: 1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Clone go on tip
      run: |
        go env
        git version
        git clone https://github.com/golang/go.git --branch master --single-branch --no-tags
        cd go/src
        git log -1 --pretty=short

    - name: Toolstash save
      run: |
        go env -w GO111MODULE=auto
        go get -u golang.org/x/tools/...
        pwd
        toolstash || true
        toolstash -v save || true

    - name: Merge patch
      run: |
        pwd
        mv *.patch go/
        cd go/
        git apply -v --ignore-space-change --ignore-whitespace --whitespace=fix *.patch

    - name: Update compiler rules
      run: |
        cd go/src/cmd/compile/internal/ssa/gen
        go run *.go

    - name: Commit changes
      run: |
        cd go
        git status
        git add src/cmd/compile/internal/ssa/gen/ARM.rules
        git add src/cmd/compile/internal/ssa/rewriteARM.go
        whoami
        git config user.email "constantinkonstantinidis@gmail.com"
        whoami | xargs -I {} git config user.name {}
        git commit -m 'ARM rules update' || true

    - name: Build
      run: |
        cd go/src
        export GOROOT_BOOTSTRAP=$(go env GOROOT)
        sh ./make.bash

    - name: Test
      run: |
        cd go/bin
        go env GOROOT
        export GOROOT=
        go tool dist version
        go tool dist test

    - name: Toolstash -cmp
      run: |
        cd go/src
        go version
        go tool dist install cmd/compile
        go build -toolexec 'toolstash -cmp' -a std || true

    - name: Toolstash-check
      run: |
        go get -u github.com/iwdgo/toolstash-check
        echo $GOROOT
        cd $GOPATH
        ls
        pwd
        toolstash-check -v || true
